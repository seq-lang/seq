from bio import *

def ground_truth_kmers(s: seq, step: int = 1, K: Static[int]):
    return {revcomp_with_pos(t) for t in s.kmers_with_pos(step, K)}

# test kmers |> revcomp optimization
@test
def test(s: seq, K: Static[int]):
    fail = False
    for step in range(1, K + 2):
        result1 = set[tuple[int,Kmer[K]]]()
        s |> kmers_with_pos(step, K) |> revcomp_with_pos |> result1.add
        if result1 != ground_truth_kmers(s, step, K):
            fail = True

        result1 = set[tuple[int,Kmer[K]]]()
        ~s |> kmers_with_pos(step, K) |> revcomp_with_pos(...) |> result1.add
        if result1 != ground_truth_kmers(~s, step, K):
            fail = True

        result2 = set[Kmer[K]]()
        s |> kmers(step, K) |> revcomp() |> result2.add
        if result2 != {t[1] for t in ground_truth_kmers(s, step, K)}:
            fail = True

        result2 = set[Kmer[K]]()
        ~s |> kmers(step, K) |> revcomp |> result2.add
        if result2 != {t[1] for t in ground_truth_kmers(~s, step, K)}:
            fail = True
    assert not fail

def test_all(s: list[seq], K: Static[int]):
    for a in s:
        test(a, K)

v = [   s'C',
        s'GA',
        s'CTC',
        s'TATG',
        s'GTAGC',
        s'TGCAGT',
        s'TACTAGG',
        s'GTTAGAAA',
        s'TGGATCATA',
        s'TTGGCCACGG',
        s'CCTCTGCGGGA',
        s'ATGATAGGAAAG',
        s'CTCTTTGGGGTTA',
        s'GCAGTTTTTCGCTT',
        s'GCTTTGTGAAATGGT',
        s'CATGGAGCGGCCGTGT',
        s'TTAACGGGCCCTTGCCG',
        s'CCTTGTTTGCTCGCGAGA',
        s'GGCCAAGCTTATCTGTGTT',
        s'CCGCTTGCCTTACATTGGCC',
        s'GAGTGTGTAATAAATAATCGT',
        s'GCGACAATATACTGCGTGGTCA',
        s'TTCATATATGACCCCGTACAGGG',
        s'GCTTTGATGAATTAAGGATAGCTT',
        s'GTTATATCCCCCCGCGCTTTAACCG',
        s'AAACCTGACCGTTAAGACTTTAAGAC',
        s'GACCTTGCCCTTGAAGGAACATCTGGG',
        s'CGTCCATGTTTGCATACGACGTTGTGTT',
        s'TAAACGAGACCGTCTCTGCTCATAGCCGT',
        s'CAGTACGTTAGTGTGACCGCAAAAGGTGGT',
        s'GAGGATATATAACAACCTCAGGAGTCTGTTC',
        s'AGGATAAGGTTCACAGAACTATTGTTATGATT',
        s'CACAGAGAGCGGGCTCTATTGTTGTCGTGGGGA',
        s'TACTCGTGGCGAGGAGGAGTTTTCTTAAATCGGA',
        s'GGGCTTTTCGCCTGGTTATAACTTGGTATGGAGCT',
        s'AGGACATTTAAGATTTAAAAGCACCCTCAGCAACAT',
        s'CATGAAGGATCAGTGACTTCCTTACCTGTGCTGCCGG',
        s'CGTATTGGTTCGTGACTTCCACGGGGTGTCACGGCGGA',
        s'GCGAAACGCATCATCCGGGACAATCAACTCATCAGGCGG',
        s'CACAACCGGGGCTCGATCCCAAGCACCATTACACGATGAC',
        s'TCACGAAGACACAACGGTCCACACCTACTTTCCCCCCAACG',
        s'ATCTACTGAAGCGCTACAGTCATCTACTGCCACTGAACGGAC',
        s'GTGTCCATGCTCCGTTTAAAATAGAGAAGCCAAAGGAGTACCA',
        s'AGTAGGCTGCAAATCGATCGCCACGCAAATGCTAAAAGTTGTGC',
        s'GTGATTAGAGGAGGTAACAGCCCAAACGCTCTCTTCCTCGCTATA',
        s'TGTTGTGTCCGATAAGATTGCGTCCTGGTGGAGTGGTTGCGGGTTA',
        s'GCTTAACTAACCGAGCCGGTGCGGAGATTCCGTGTGTGGCTAGTTAT',
        s'CTCGCGTGCGGAGACCTCTCCCCCAGGAATAACCGATTGACCGTGGAT',
        s'ACATTCGCAGATAGGGCAACGGTTTAGTGCGCACCATGCTAAGCTAAGG',
        s'TTTGCACCGGTTAGCTGTCGTTAATCCGACGGGCCTTATCTCGGTACATT',
        s'TACTCGGACATCCATCCAAAGTTGGAGATAGCTTTGTATGAAAATGATGTA',
        s'CAGACTTTCTTATGTATCCCTCTCTTGCACAGATTGTTCATGTCATTTGCTG',
        s'CAGCGGGCCCTCTGCTTATAGCCGGGTAGTCCGTATTACGACCGAGGTCCCGT',
        s'GGGTAACAACAAAGGATGAGGTTAATTCGGAGGGAAAACGTCGCGAACGATAGT',
        s'GCTGAGCCCAGGAGGGGAGCTCTCGGGAGTCGCAATGAGATCCGTGGGCCCCCAA',
        s'CGATTAGCGACCAAATGGTATACATTACGTATCGGGTGTCGAACCCCCTACCACTT',
        s'CCGAACCATTCCTAGACTTGCATCGAAGACGCCGGAGACATAGAGTATACTATTTCG',
        s'CAATAAAGGAAGATCGACCCAGTTGCTAGGCCCGGCGCTTCCCTGGAGCCTTGGTGAA',
        s'AAATGGAGCCAGACAGCGTGACGCCCTGCGCGCGACAAGCTACGTCGAAGGCACATTCT',
        s'CAATCTATGATTTTTGTCGGGTTGCGAGCCTAAGTTAACTTGATCTCCGTACGTGCCACA',
        s'CAACTACTGAGCTCCGTTAGGTCCCTTTCATTTCGCTGCGTATGTGTAACCAACCTCGTAC',
        s'TGGAGAGTCCCTTCCCACGCGCAACCTGCGGTTAGCATCGCAGATCTTTCTACAGCCCTATG',
        s'GATCCTAACCTTCTACACTCATCGAACACGAACATGATGCTGTGCGGTGTCATTTGGATTGTG',
        s'GTCATTACATAACCATGAGCGCCCCCGTTCAAACTTCAGCGTTTTTGTAAAGGGCATCATTGCC',
        s'GGGGCAAGCAGACGGATTACACACTCTTTTAACCTCGTTTCTACACTCCTAATCAGTCCGTACAG',
        s'CATGCGGTCCCCGCAGCCCAGATCCAATCCGGCAGCAGAAGGCATTATCTGCTGGCGTTGCCTTAC',
        s'TAAGTCGACCGAAGGATGCAAAAGGAATCCCCGACAGTATCTGTCACATCCCTGCAGCCGTCTATTT',
        s'GATGATCACCTAATGACCGTCGCGGGACCAATGGTATCCGAGTGATGGAATCCTACGATTGATCAACC',
        s'AAAGAATTTCCCAAAGTCCCACTTGTTAATACCGTGACGCAGCCGGACTAACACAGTCCCAGGTATTGA',
        s'ATCGTTTATGTAGATCACGGCATATCTCTAACTAACGGCATAGTACCGGCATGCAGTTGAGCAGACTGGG',
        s'AGACTCTGGCATATCTGTCCATACCCATAAGCCGGCCCACGCAGGATCAGGAGTGAATTGCCGCGCAGATC',
        s'CTGGAGCCATGAATATAGCATCCCAACCCAACGTTTGAGTGTCTCCAGCGGAATAAAACGCCTAATTTTTGG',
        s'TTTAAGCCACCTGTCATTAGATATATCGCGCCCGCCACTTACATCTACCTGTTCATAGAGACTATGCGTACTA',
        s'CTCACATCTCTATCGATTTAGGTAGAGGCTAGCGGTCATAAATCTAAGTCTAGTCAGCCCGCAACGCCACATCG',
        s'TACAGCCCGTGCAGTGTACAAGCGCACACGGGAGCATCCTGGGTTATGAGCCCCCCGAGGCCAGTGCAAGACCAG',
        s'GTCTCTTGGCAGTGTCCAGACAGACGCGGTGCCTGGGAAGACGTTAATTGGTGCTACTTCAACCACGCCTTGCTTG',
        s'GGGGCTATTTGGGATTAGAGAAGTGCCTACACTCGGTGGCCCAGCTGGGCTGTCCATTGCAGACACGCGTCGCGTGT',
        s'CAGGAGTATGGACCCAACATGACTTTGGCGGCAGCAGTATCCATGCCCGTTGCCTGTAGTCTTTAGGAGGATCGTAAT',
        s'CGCGGTGTACCGTTTCAGATTCTATCTACTACGACTAGGTGCTTAGCAATTACCAATCGTACGCGACCGATATAAAACT',
        s'CGCCAGGGGTCATCCCGGGGATTCCATCAGTTAAACGTCTTGAAACCAGTTAGAGAACAGAGACCAGTTAGGCAACTCGG',
        s'TTCCCGCTTCTCTGCCCGATACCCAATTCTTGATACGTAGTCTCCCTACCGCAGGATATGACGCACGCCCCTATAACGAAC',
        s'AGCTACCACATACACAGGGAGACCGCGCGGTTTTGACCGTATGGTCAACCCATCTTCTAAGTTGCAGCGTCGAAGAGTCCCG',
        s'GGTAACGACGATGGGACAAAATGATAAATCACGTCGTACTTAGTTCACTTAGGTAAGGGTTTGGTGTGGCGTGAATAACTTGA',
        s'GTGCTCGAGGCAGCGACACGCGTTCATCAGATTGTGACAATGACCATATATTAGACGTCAGTTAAAGGAAGTTCACCGGTAACG',
        s'GTAAACTTCAGTTGCTAAAGTTAAATTCATCTGATGCTTACGTGGAAACTTGAGAAGGAGCCATTGAGACTTCGCTCCAGATAAC',
        s'CCGAATTCCGTTATCAACGTAAGCTAAGCGGCTTGGGCGTAGAGTTTCTAAGGGTGAACGTACACTTCTTTCGCTGCACCGATGCC',
        s'CCACTCCCTGATTAGCTTTGTTCTGTATTGCATGAATAAGGTTCAATTTGCGACCTTATGAAACAGGTAATCTGGGAAGCCTTAGTG',
        s'CATAAGTCCCAGATTCTCGCCGGATGGCAATTCTAGCGTCACGTTAGACAACGGTGAGAACGGAGGAGATTCAGAGCACAGGCTTGAA',
        s'AAGCTTTAGAGATCCAGGACCTTATGTCGGTACAAGAAACTAGAACTCGCTAAGTAGATCAGGTCCTGGCAGCATCCATGCCCCATTTG',
        s'TACTTATTACCACCTTTGTTGGGCTTTGACAGATATTACAGTGGTCTGATTCGTGGGGGCTTACTGCAACGCATACTATGGCGAAGGTCC',
        s'GGCAAGCTGAGGAGGGACGGTCACCCACTGAAAACATTTGAAACCGGGCGGGCTTGAACAGGGCCAATCAAGACCCCTCTCATAGGATGGC',
        s'CCATGCGAATTTTCCGGTCAAGGAACACCTGATTCAGAGCGGGCTACCAGAACAGGCAAGCAGCCCTACATCGCTTCTTAAAAAATATTAAG',
        s'TGGCTATGCATCTCACTTGGCTTTTCACGGGGGTGCCCAGAGGACATAGATACAGCACGGTCCCATGCTAGGATCCAACGAGTGCATTAGAAT',
        s'CTAAGCCTATGCCAGTCTTCCTTGTTTACTCGGTGGTCCTGTACGTCCATATCATTTACGTCCATGAAGCCAACCCCCGAGCAAATACCCGGTA',
        s'GATAAATTCCTCCCATATCAAAGTTCTTGCCCACGCGGGCTACCCAGCTAACGTAACTGTTTCGACACTAGAGATAACAACGCGTTGCGACTCTC',
        s'GGCGGCATGTAGGACGGCGTCAGTGGGTATACTATCGCTCTTAGGTCTCCAGTCAAAAAAATGTGGCATCCGGTAGTTGCTGGCAGATCTGCACTT',
        s'ATTTATTTGCCCCGCAGTGTCCTTTTTCTAGTCATAAATCCTCATACCGCGGGCCCTTCATCCGGTTTGATTCGAAGCATTGGTATGTTAGATACGT',
        s'ACACGCCATGAGGTAAATAACTCTGGAATTGTCAGTCAAGCACCGTGTGTTCAGTGTAAGTTTCTCGGACCAAGGCATATCGACGCTATGCGGTTTAT',
        s'AACCTCAGTCGGGCAGGCCATGGCGCGAAATGACTCGAGTAGACTCCATCTCTAAGGAGCGGAGCTGTTGCAACTAGGGTGACACACAGCTCGCCATGA',
        s'TATTGCAAGGCCCTACGCGGCTACGTCTCAATATATCCTATGGGCCGCAGCGTTCGGCCAATTCACATGGATGAGACATGGGTCCAAAATTTGCGGGATA'   ]

test_all(v, 1)
test_all(v, 2)
test_all(v, 3)
test_all(v, 4)
test_all(v, 5)
test_all(v, 6)
test_all(v, 7)
test_all(v, 8)
test_all(v, 9)
test_all(v, 10)
test_all(v, 11)
test_all(v, 12)
test_all(v, 13)
test_all(v, 14)
test_all(v, 15)
test_all(v, 16)
test_all(v, 17)
test_all(v, 18)
test_all(v, 19)
test_all(v, 20)
