from bio import *

table = {s'ATA': p'I', s'ATC': p'I', s'ATT': p'I', s'ATG': p'M',
         s'ACA': p'T', s'ACC': p'T', s'ACG': p'T', s'ACT': p'T',
         s'AAC': p'N', s'AAT': p'N', s'AAA': p'K', s'AAG': p'K',
         s'AGC': p'S', s'AGT': p'S', s'AGA': p'R', s'AGG': p'R',
         s'CTA': p'L', s'CTC': p'L', s'CTG': p'L', s'CTT': p'L',
         s'CCA': p'P', s'CCC': p'P', s'CCG': p'P', s'CCT': p'P',
         s'CAC': p'H', s'CAT': p'H', s'CAA': p'Q', s'CAG': p'Q',
         s'CGA': p'R', s'CGC': p'R', s'CGG': p'R', s'CGT': p'R',
         s'GTA': p'V', s'GTC': p'V', s'GTG': p'V', s'GTT': p'V',
         s'GCA': p'A', s'GCC': p'A', s'GCG': p'A', s'GCT': p'A',
         s'GAC': p'D', s'GAT': p'D', s'GAA': p'E', s'GAG': p'E',
         s'GGA': p'G', s'GGC': p'G', s'GGG': p'G', s'GGT': p'G',
         s'TCA': p'S', s'TCC': p'S', s'TCG': p'S', s'TCT': p'S',
         s'TTC': p'F', s'TTT': p'F', s'TTA': p'L', s'TTG': p'L',
         s'TAC': p'Y', s'TAT': p'Y', s'TAA': p'X', s'TGC': p'C',
         s'TGT': p'C', s'TGA': p'X', s'TGG': p'W'}
dna = s'ACCATGACAACGATCAACATAAGGCCTACTAGCAAGAGACATAATATTCTGCTACTCCACAAACCGAGTCCACAACCCTATGGTTGTCGACAGCGCGATCGGCTTTGCGGGTAGGGATAAGGCTACGAGTCGTTTGACCGTGAATCAGCAGTAGCCGTCGCGGTGTTCGTTGCTTTATGATTGTCCTGGTCT'
print dna |> translate  # EXPECT: TMTTINIRPTSKRHNILLLHKPSPQPYGCRQRDRLCG*G*GYESFDRESAVAVAVFVAL*LSWS
protein = dna |> translate(table=table)
print protein  # EXPECT: TMTTINIRPTSKRHNILLLHKPSPQPYGCRQRDRLCGXGXGYESFDRESAVAVAVFVALXLSWS
protein = ~dna |> translate(table=table)
print protein  # EXPECT: RPGQSXSNEHRDGYCXFTVKRLVALSLPAKPIALSTTIGLWTRFVEXQNIMSLASRPYVDRCHG

print protein[0], protein[-1]  # EXPECT: R G
print protein[1:5]   # EXPECT: PGQS
print protein[:-20]  # EXPECT: RPGQSXSNEHRDGYCXFTVKRLVALSLPAKPIALSTTIGLWTRF
print protein[12:]   # EXPECT: GYCXFTVKRLVALSLPAKPIALSTTIGLWTRFVEXQNIMSLASRPYVDRCHG
print protein[:]     # EXPECT: RPGQSXSNEHRDGYCXFTVKRLVALSLPAKPIALSTTIGLWTRFVEXQNIMSLASRPYVDRCHG

p1 = p'HEAGAWGHEE'
p2 = p'HPAWHEAE'

print p1 @ p2  # EXPECT: (1M2I7M, -5)

pam90 = {('B', 'N'): 4, ('G', 'G'): 5, ('K', 'G'): -4, ('S', 'E'): -2, ('Y', 'E'): -6,
         ('W', 'R'): 0, ('V', 'M'): 1, ('N', 'R'): -2, ('W', 'Q'): -7, ('L', 'Q'): -3,
         ('V', 'N'): -4, ('F', 'K'): -8, ('G', 'E'): -1, ('S', 'L'): -5, ('P', 'R'): -1,
         ('E', 'D'): 4, ('Y', 'G'): -8, ('W', 'P'): -8, ('Q', 'A'): -2, ('G', 'D'): -1,
         ('K', 'D'): -2, ('T', 'N'): 0, ('W', 'W'): 13, ('L', 'D'): -7, ('S', 'S'): 4,
         ('K', 'C'): -8, ('S', 'A'): 1, ('Y', 'I'): -3, ('V', 'I'): 3, ('Q', 'C'): -8,
         ('Z', 'P'): -2, ('T', 'G'): -2, ('B', 'P'): -3, ('T', 'L'): -3, ('Z', 'F'): -8,
         ('F', 'G'): -6, ('Z', 'Q'): 5, ('V', 'T'): -1, ('S', 'H'): -3, ('B', 'Q'): 0,
         ('I', 'Q'): -4, ('Y', 'K'): -6, ('W', 'T'): -7, ('P', 'D'): -4, ('I', 'C'): -3,
         ('K', 'R'): 2, ('Z', 'R'): -1, ('T', 'E'): -2, ('B', 'R'): -3, ('Q', 'R'): 0,
         ('K', 'Q'): -1, ('Z', 'S'): -2, ('B', 'S'): 0, ('Y', 'M'): -6, ('V', 'E'): -3,
         ('Z', 'T'): -2, ('Y', 'D'): -6, ('V', 'W'): -9, ('T', 'C'): -4, ('B', 'T'): -1,
         ('T', 'H'): -3, ('F', 'Q'): -7, ('L', 'I'): 1, ('M', 'Q'): -2, ('R', 'A'): -4,
         ('C', 'D'): -8, ('V', 'F'): -4, ('F', 'C'): -7, ('C', 'R'): -5, ('D', 'D'): 6,
         ('V', 'P'): -3, ('S', 'D'): -1, ('P', 'C'): -5, ('F', 'R'): -6, ('C', 'C'): 9,
         ('I', 'G'): -5, ('W', 'K'): -6, ('I', 'N'): -3, ('Z', 'V'): -3, ('T', 'A'): 1,
         ('B', 'V'): -4, ('K', 'L'): -5, ('L', 'G'): -6, ('F', 'A'): -5, ('Z', 'W'): -8,
         ('S', 'K'): -1, ('B', 'W'): -7, ('K', 'K'): 5, ('E', 'N'): 0, ('Y', 'Q'): -6,
         ('V', 'A'): 0, ('W', 'I'): -8, ('V', 'S'): -3, ('T', 'T'): 5, ('F', 'M'): -1,
         ('L', 'E'): -5, ('M', 'M'): 9, ('W', 'H'): -4, ('S', 'R'): -1, ('P', 'Q'): -1,
         ('P', 'N'): -2, ('B', 'Y'): -4, ('H', 'A'): -4, ('P', 'G'): -3, ('F', 'N'): -5,
         ('H', 'N'): 2, ('P', 'K'): -3, ('T', 'M'): -2, ('K', 'H'): -2, ('T', 'R'): -3,
         ('L', 'C'): -9, ('W', 'N'): -5, ('E', 'Q'): 2, ('S', 'G'): 0, ('Z', 'H'): 1,
         ('Y', 'S'): -4, ('G', 'R'): -5, ('W', 'M'): -7, ('F', 'D'): -8, ('T', 'K'): -1,
         ('C', 'N'): -6, ('T', 'P'): -1, ('V', 'L'): 0, ('F', 'I'): 0, ('G', 'Q'): -3,
         ('L', 'A'): -3, ('M', 'I'): 1, ('W', 'L'): -3, ('S', 'N'): 1, ('I', 'R'): -3,
         ('H', 'E'): -1, ('Y', 'W'): -2, ('I', 'D'): -4, ('W', 'C'): -10, ('N', 'A'): -1,
         ('T', 'I'): 0, ('Z', 'K'): -1, ('Q', 'N'): -1, ('M', 'K'): 0, ('K', 'E'): -2,
         ('S', 'C'): -1, ('Z', 'L'): -4, ('Y', 'Y'): 9, ('V', 'Y'): -4, ('W', 'A'): -8,
         ('Y', 'F'): 4, ('Z', 'M'): -3, ('M', 'R'): -2, ('V', 'H'): -4, ('F', 'E'): -8,
         ('M', 'E'): -4, ('H', 'R'): 1, ('P', 'P'): 7, ('P', 'I'): -4, ('Q', 'Q'): 6,
         ('P', 'F'): -6, ('B', 'A'): -1, ('Z', 'N'): 0, ('I', 'A'): -2, ('F', 'F'): 8,
         ('I', 'H'): -5, ('W', 'G'): -9, ('Y', 'H'): -1, ('B', 'B'): 4, ('M', 'L'): 2,
         ('M', 'G'): -5, ('S', 'Q'): -2, ('W', 'F'): -2, ('D', 'A'): -1, ('K', 'A'): -3,
         ('N', 'N'): 5, ('B', 'C'): -7, ('V', 'K'): -5, ('W', 'E'): -10, ('L', 'R'): -5,
         ('T', 'S'): 2, ('B', 'D'): 5, ('Z', 'A'): -1, ('M', 'N'): -4, ('V', 'D'): -4,
         ('Q', 'D'): 0, ('M', 'A'): -2, ('V', 'V'): 6, ('W', 'D'): -9, ('S', 'F'): -4,
         ('D', 'N'): 3, ('P', 'M'): -4, ('H', 'D'): -1, ('B', 'E'): 2, ('Z', 'B'): 2,
         ('I', 'E'): -3, ('R', 'R'): 7, ('K', 'N'): 1, ('Y', 'L'): -3, ('T', 'Q'): -3,
         ('E', 'C'): -8, ('B', 'F'): -6, ('Z', 'C'): -8, ('M', 'H'): -5, ('M', 'C'): -8,
         ('S', 'M'): -3, ('E', 'R'): -4, ('E', 'E'): 6, ('B', 'G'): -1, ('Z', 'D'): 3,
         ('V', 'G'): -3, ('G', 'N'): -1, ('A', 'A'): 4, ('V', 'Q'): -4, ('L', 'N'): -4,
         ('Y', 'N'): -2, ('B', 'H'): 1, ('Z', 'E'): 5, ('V', 'R'): -4, ('P', 'H'): -2,
         ('H', 'C'): -5, ('P', 'A'): 0, ('F', 'L'): 0, ('H', 'H'): 8, ('B', 'I'): -3,
         ('C', 'A'): -3, ('I', 'I'): 6, ('T', 'F'): -5, ('L', 'L'): 6, ('Y', 'P'): -8,
         ('Z', 'G'): -2, ('D', 'R'): -5, ('M', 'D'): -5, ('G', 'C'): -5, ('S', 'I'): -3,
         ('Y', 'A'): -5, ('E', 'A'): 0, ('K', 'I'): -3, ('B', 'K'): 0, ('V', 'C'): -3,
         ('T', 'D'): -2, ('Y', 'R'): -6, ('B', 'L'): -5, ('Z', 'Y'): -6, ('G', 'A'): 0,
         ('S', 'P'): 0, ('Z', 'I'): -3, ('H', 'Q'): 2, ('Y', 'C'): -1, ('P', 'L'): -4,
         ('H', 'G'): -5, ('P', 'E'): -2, ('F', 'H'): -3, ('B', 'M'): -5, ('Z', 'Z'): 5,
         ('W', 'S'): -3, ('L', 'H'): -3, ('Y', 'T'): -4}

print p1.align(p2, mat=SubMat(pam90))  # EXPECT: (1M2I7M, 4)
print p1.align(p2, gapo=4, gape=2, gapo2=13, gape2=1, mat=SubMat(pam90))  # EXPECT: (1M2I7M, 4)
print p1.align(p2, gapo=4, gape=2, ext_only=True, mat=SubMat(pam90))  # EXPECT: (3M, 7)
print p1, p2  # EXPECT: HEAGAWGHEE HPAWHEAE
