name: Seq CI

on:
  push:
    branches:
      - master
      - develop
      - gh-actions
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    name: Seq build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Python Packages
        run: |
          python -m pip install --upgrade pip
          pip install wheel sphinx sphinxcontrib-napoleon sphinx-rtd-theme breathe exhale

      - name: Check Python
        run: |
          echo ::set-env name=SEQ_PYTHON::$($pythonLocation/lib/libpython3.8.*)
          echo ::set-env name=LD_LIBRARY_PATH::$($(pwd)/deps/lib:$LD_LIBRARY_PATH)
          echo $SEQ_PYTHON
          echo $LD_LIBRARY_PATH
        env:
          SEQ_PATH: ./stdlib
          PYTHONPATH: ./test/python

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: |
            deps
          key: ${{ runner.os }}-deps

      - name: Build Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: /bin/bash deps.sh
        env:
          CC: clang
          CXX: clang++

      - name: Build
        run: |
          mkdir build
          (cd build && cmake .. -DCMAKE_BUILD_TYPE=Release \
                                -DSEQ_DEP=$(pwd)/../deps \
                                -DCMAKE_C_COMPILER=${CC} \
                                -DCMAKE_CXX_COMPILER=${CXX})
          ln -s $(pwd)/deps/lib/libomp.so $(pwd)/build/libomp.so
          cmake --build build --config Release -- VERBOSE=1
        env:
          CC: clang
          CXX: clang++

      - name: Test
        run: |
          echo ::set-env name=SEQ_PYTHON::$($pythonLocation/lib/libpython3.8.*)
          echo ::set-env name=LD_LIBRARY_PATH::$($(pwd)/deps/lib:$LD_LIBRARY_PATH)
          build/seqtest
          build/seqc test/core/helloworld.seq
        env:
          SEQ_PATH: ./stdlib
          PYTHONPATH: ./test/python
