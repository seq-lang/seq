name: Seq CI

on:
  push:
    branches:
      - master
      - develop
      - gh-actions
  pull_request:
    branches:
      - develop

jobs:
  main:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    name: Seq CI
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Find Python
        run: echo "SEQ_PYTHON=$(python test/python/find-python-library.py)" >> $GITHUB_ENV

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-deps

      - name: Build Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: /bin/bash deps.sh 2
        env:
          CC: clang -Wno-implicit-function-declaration
          CXX: clang++

      - name: Linux Setup
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          mkdir build
          ln -s $(pwd)/deps/lib/libomp.so $(pwd)/build/libomp.so
          echo "SEQ_HTSLIB=$(pwd)/deps/lib/libhts.so" >> $GITHUB_ENV

      - name: macOS Setup
        if: startsWith(matrix.os, 'macos')
        run: |
          mkdir build
          ln -s $(pwd)/deps/lib/libomp.dylib $(pwd)/build/libomp.dylib
          echo "SEQ_HTSLIB=$(pwd)/deps/lib/libhts.dylib" >> $GITHUB_ENV

      - name: Build
        run: |
          (cd build && cmake .. -DCMAKE_BUILD_TYPE=Release \
                                -DSEQ_DEP=$(pwd)/../deps \
                                -DCMAKE_C_COMPILER=${CC} \
                                -DCMAKE_CXX_COMPILER=${CXX})
          cmake --build build --config Release -- VERBOSE=1
        env:
          CC: clang
          CXX: clang++

      - name: Test
        run: |
          build/seqtest
          build/seqc test/core/helloworld.seq
        env:
          SEQ_PATH: ./stdlib
          PYTHONPATH: ./test/python

      - name: Build Documentation
        run: |
          python -m pip install --upgrade pip
          pip install wheel sphinx sphinxcontrib-napoleon sphinx-rtd-theme breathe exhale
          (cd docs/sphinx && python docgen.py ../../stdlib)
          if ! make -C docs/sphinx html 2>sphinx.log; then
            cat sphinx.log
            false
          fi

      - name: Deploy Documentation
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/sphinx/_build/html
          cname: docs.seq-lang.org
          force_orphan: true
